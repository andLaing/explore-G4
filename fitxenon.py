import numpy as np
import scipy.optimize

def exp(x, l):
    return np.exp(-x/l)

x = tuple(range(1,101))
# cube
cube = (0.993468, 0.98547, 0.976182, 0.965874, 0.954617, 0.94319, 0.930849, 0.918016, 0.904581, 0.891601, 0.878496, 0.864658, 0.851334, 0.83661, 0.82311, 0.809601, 0.796079, 0.781719, 0.768554, 0.754483, 0.740597, 0.727481, 0.71388, 0.700889, 0.687672, 0.675872, 0.663157, 0.65042, 0.637641, 0.625407, 0.613327, 0.601841, 0.590173, 0.578981, 0.567639, 0.55597, 0.544328, 0.533418, 0.523814, 0.512066, 0.502491, 0.491855, 0.482799, 0.471957, 0.462934, 0.453279, 0.443888, 0.435088, 0.425991, 0.418375, 0.408492, 0.399586, 0.392286, 0.383016, 0.375876, 0.367211, 0.360018, 0.352465, 0.344909, 0.337731, 0.330286, 0.323609, 0.316165, 0.30904, 0.303002, 0.295543, 0.290198, 0.28446, 0.277463, 0.272548, 0.265566, 0.259575, 0.254612, 0.248506, 0.243403, 0.237705, 0.232564, 0.228397, 0.223214, 0.217076, 0.213458, 0.208272, 0.204541, 0.199286, 0.195817, 0.18988, 0.186792, 0.182465, 0.178546, 0.174019, 0.170421, 0.166664, 0.163497, 0.159241, 0.156169, 0.152129, 0.148851, 0.145612, 0.142556, 0.138596)
# sphere
sphere = (0.993618, 0.986058, 0.977472, 0.96793, 0.957784, 0.947147, 0.936181, 0.924401, 0.912347, 0.900153, 0.888247, 0.875564, 0.863046, 0.850214, 0.837254, 0.825233, 0.811944, 0.799354, 0.7863, 0.774384, 0.760791, 0.748011, 0.736059, 0.723973, 0.711712, 0.699206, 0.687456, 0.675618, 0.663444, 0.652583, 0.64011, 0.629328, 0.618004, 0.607217, 0.596112, 0.584966, 0.573704, 0.563964, 0.553604, 0.543271, 0.531595, 0.523309, 0.513117, 0.503725, 0.493411, 0.484806, 0.475717, 0.466061, 0.457226, 0.448551, 0.441122, 0.431447, 0.423232, 0.41553, 0.405929, 0.398349, 0.391058, 0.382924, 0.375476, 0.36832, 0.361189, 0.353551, 0.346219, 0.340231, 0.331963, 0.326205, 0.319143, 0.312612, 0.30669, 0.300725, 0.29364, 0.288504, 0.281851, 0.276969, 0.270086, 0.265193, 0.259033, 0.253453, 0.249034, 0.244464, 0.238519, 0.233797, 0.228603, 0.224248, 0.219622, 0.214783, 0.210086, 0.205583, 0.201095, 0.197806, 0.192496, 0.18868, 0.184524, 0.180919, 0.177195, 0.173151, 0.170158, 0.165501, 0.162663, 0.15929)
# slab

slab = (
0.999197, 0.990626, 0.980671, 0.970236, 0.959041, 0.946935, 0.934712, 0.922065, 0.909003, 0.896483, 0.882893, 0.869529, 0.856408, 0.842812, 0.829512, 0.816173, 0.80306, 0.789643, 0.776176, 0.762826, 0.75025, 0.737255, 0.725015, 0.712434, 0.699356, 0.687833, 0.67547, 0.663494, 0.652095, 0.64016, 0.628039, 0.617655, 0.605707, 0.595458, 0.585011, 0.573543, 0.562813, 0.552317, 0.543063, 0.530695, 0.522375, 0.51282, 0.503952, 0.493972, 0.484587, 0.475994, 0.467016, 0.457741, 0.449314, 0.442179, 0.43278, 0.424258, 0.417549, 0.408885, 0.401509, 0.392779, 0.385975, 0.379125, 0.371628, 0.365554, 0.357416, 0.350956, 0.34387, 0.336599, 0.331101, 0.324685, 0.318778, 0.313327, 0.306947, 0.300999, 0.295756, 0.289063, 0.283979, 0.278044, 0.273535, 0.267985, 0.262797, 0.25772, 0.25405, 0.2485, 0.24357, 0.239413, 0.234918, 0.230972, 0.225974, 0.22236, 0.217692, 0.214179, 0.210186, 0.205986, 0.20272, 0.198705, 0.195682, 0.192156, 0.188468, 0.185075, 0.181819, 0.178038, 0.175063, 0.172189,  )

x = np.array(x) / 10


def fit(data):
    return scipy.optimize.curve_fit(exp, x, np.array(data), (3.7,))

def plot_decay(attlength, style):
    plt.plot(xs, exp(xs, attlength), style, label=f'exp(-x/{attlength:4.2f}cm)')

(l_cube,)  , (cov_cube,)   = fit(cube)
(l_slab,)  , (cov_slab,)   = fit(slab)
(l_sphere,), (cov_sphere,) = fit(sphere)

import matplotlib.pyplot as plt
xs = np.linspace(0, x[-1])

plt.plot(x, cube  , 'sy', label='centre of cube')
plt.plot(x, slab  , '_b', label='side of slab')
plt.plot(x, sphere, '.r', label='centre of sphere')
plot_decay(l_sphere, 'r')
plot_decay(3.7     , 'g')
plt.xlim(0, x[-1])
plt.ylim(0, None)
plt.legend()
plt.show()
